#+TITLE: Emacs
#+CATEGORY: Emacs
#+PROPERTY: Effort_ALL 5 13 21 34 55 89 144 233 377 610 987

* DONE fontの微調整
SCHEDULED: <2021-08-28 Sat>
:PROPERTIES:
:Effort:   13
:END:
:LOGBOOK:
CLOCK: [2021-08-28 Sat 09:40]---[2021-08-28 Sat 09:50] =>  0:10
:END:

* TODO [#B] postgresのコンテナ名を固定する
SCHEDULED: <2021-08-28 Sat>
:PROPERTIES:
:Effort:   21
:END:

* TODO [#C] org-todoのプライオリティを三段階ではなく任意の数値を設定できるようにして実施順序を決められるようにできないか？
SCHEDULED: <2021-08-28 Sat>
:PROPERTIES:
:Effort:   21
:END:

org-agendaを用いてタスクの調整を行っている。
その中でタスクの優先順位付けを行い実施の順番を組みたい。
しかしorg-todoのpriorityはA, B Cの3段階でしかプライオリティを設定できない。
それでは順序を固定することができない。

任意の自然数を設定し、小さい数値ほど実施タイミングを早く行うようにすればこの問題を解決できる。
* TODO [#C] orgのpriorityの設定をするときにFnキーを押さないといけないのが面倒
SCHEDULED: <2021-08-28 Sat>
* DONE [#C] ウィンドウサイズの変更がキーボード上からできない
SCHEDULED: <2021-08-27 Fri>
:LOGBOOK:
CLOCK: [2021-08-27 Fri 23:37]--[2021-08-28 Sat 00:06] =>  0:29
:END:

リサイズがとても面倒。
* TODO [#C] whalebrewでdotenvファイルを指定できると良いのではないか
SCHEDULED: <2021-08-28 Sat>
:PROPERTIES:
:Effort:   55
:WAKATIME_CATEGORY: researching
:END:
:LOGBOOK:
CLOCK: [2021-08-24 Tue 08:03]--[2021-08-24 Tue 08:09] =>  0:06
CLOCK: [2021-08-06 Fri 08:41]--[2021-08-06 Fri 08:41] =>  0:00
:END:

whalebrewは良い実装だが、dockerの全てのオプションを指定できるわけでは
ない。Goで実装する必要もないし、設計思想がそもそも良くない。

- Goで実装することで柔軟性を失っている。
- 開発ツールは限りなく柔軟でなければならない。

YAMLからコマンドラインを生成するという方針は良い。その処理をGoのような
コンパイル言語で行う必要はない。Goもあってよいが、仕様を決めることが重
要で、その仕様に沿った各種言語での実装が必要。実装言語として適切だと思
われるものは、Perl、Ruby、PHP、Python、Bash、GNU Guile、Emacs Lisp、
Common Lispあたりだと考える。Dockerの起動オプションを生成したら、プロ
セスの起動はOSの機能に任せるのが良い。別途、環境変数の読み込みの設定を
可能にする必要があると思われる。
* DONE [#C] fontの設定を等幅に変更する
SCHEDULED: <2021-08-25 Wed>
:PROPERTIES:
:Effort:   34
:END:
:LOGBOOK:
CLOCK: [2021-08-24 Tue 18:41]--[2021-08-24 Tue 19:02] =>  0:21
:END:

* DONE [#C] edit-indirect-bufferでC-c C-cが保存になっているがC-c C-cは他のモードで重要なキーバインドとなっているため別のキーにバインドし直す
SCHEDULED: <2021-08-27 Fri>
:PROPERTIES:
:Effort:   34
:END:
:LOGBOOK:
CLOCK: [2021-08-27 Fri 19:40]--[2021-08-28 Sat 07:44] => 12:04
:END:

* DONE postgresに接続するときに接続情報の指定を毎回行わないといけない
SCHEDULED: <2021-08-24 Tue>
:LOGBOOK:
CLOCK: [2021-08-23 Mon 09:03]--[2021-08-23 Mon 09:23] =>  0:20
:END:

* DONE adoc-modeのコメントが小さすぎて見えない
SCHEDULED: <2021-08-22 Sun>
:PROPERTIES:
:Effort:   34
:ORDERED:  t
:END:
:LOGBOOK:
CLOCK: [2021-08-22 Sun 18:24]--[2021-08-22 Sun 19:26] =>  1:02
:END:
* DONE mode-lineを表示しないように設定を更新する
SCHEDULED: <2021-08-06 Fri>
:PROPERTIES:
:Effort:   5
:WAKATIME_CATEGORY: coding
:ORDERED:  t
:END:
:LOGBOOK:
CLOCK: [2021-08-06 Fri 09:04]--[2021-08-06 Fri 09:05] =>  0:01
CLOCK: [2021-08-06 Fri 08:42]--[2021-08-06 Fri 09:04] =>  0:22
:END:

* DONE タスクに集中できない
SCHEDULED: <2021-08-06 Fri>
:PROPERTIES:
:Effort:   21
:WAKATIME_CATEGORY: designing
:END:
:LOGBOOK:
CLOCK: [2021-08-06 Fri 08:41]--[2021-08-06 Fri 08:41] =>  0:00
CLOCK: [2021-08-06 Fri 08:10]--[2021-08-06 Fri 08:41] =>  0:31
CLOCK: [2021-08-06 Fri 05:35]--[2021-08-06 Fri 05:45] =>  0:10
:END:

他の情報が目に入って気が散る。

org-clock-inするときにそれ以外の情報をframeに表示させないようにしたい。
(org-clock-in)
(make-frame)
(edit-indirect-region)
(org-narrow-to-subtree)
(set-frame-name "xxxxxxxxx")

;; headlineの取得
(nth 4 (org-heading-components))

(org-clock-is-active)

org-clock-in-hook

org-clock-out-hook

=C-c C-x <TAB>=

(org-clock-is-active)
でclock-inしているか確認する。

YES -> org-clock-outする
NO  -> (get-buffer-create "OOOO")

mode-lineを消す。

* DONE 明日以降の計画を頻繁に見たくない
SCHEDULED: <2021-08-06 Fri>
:PROPERTIES:
:Effort:   21
:WAKATIME_CATEGORY: designing
:END:
:LOGBOOK:
CLOCK: [2021-08-06 Fri 04:29]--[2021-08-06 Fri 05:14] =>  0:45
:END:

気が散る。

=s-1= にbindしているorg-agenda-listで今日の計画だけ表示するようにできれば良さそう。

* DONE org-agendaの表示を親も含めて表示する
SCHEDULED: <2021-08-06 Fri>
:PROPERTIES:
:Effort:   21
:WAKATIME_CATEGORY: coding
:END:
:LOGBOOK:
CLOCK: [2021-08-06 Fri 05:14]--[2021-08-06 Fri 05:14] =>  0:00
CLOCK: [2021-08-06 Fri 04:31]--[2021-08-06 Fri 04:47] =>  0:16
:END:

* DONE wakatime-transportのuser agentを設定する
SCHEDULED: <2021-08-02 Mon>
:PROPERTIES:
:Effort:   34
:END:
:LOGBOOK:
CLOCK: [2021-08-02 Mon 18:40]--[2021-08-02 Mon 18:40] =>  0:00
:END:

* DONE wakatime-recordにwork typeの実装を移植する
SCHEDULED: <2021-08-02 Mon>
:PROPERTIES:
:Effort:   5
:WAKATIME_CATEGORY: coding
:END:
:LOGBOOK:
CLOCK: [2021-08-02 Mon 17:29]--[2021-08-02 Mon 18:01] =>  0:32
CLOCK: [2021-08-02 Mon 06:00]--[2021-08-02 Mon 06:01] =>  0:01
CLOCK: [2021-08-02 Mon 04:01]--[2021-08-02 Mon 06:00] =>  1:59
:END:

* DONE wakatime-record-language-alistにorg-agenda-modeを追加する
:PROPERTIES:
:Effort:   5
:END:
