#+TITLE: Emacsの設定

[[README.org][en]] | [[README_ja.org][ja]]

これは私のGNU Emacsです。ここでは私とEmacsとの関わりについて書きます。

[[https://res.cloudinary.com/symdon/image/upload/v1645157040/demo_spyojf.gif]]

* なぜ私はEmacsを使うのか

Emacsはテキストエディタ、つまり文章やプログラムを書く時に使うためのソフトウェアです。長い歴史と根強いファンが世界中に存在し、今もコミュニティによって開発が続けられています。

このエディタはカスタマイズ性に優れており、自分好みのEmacsに育てていく事ができます。何をしたいのか、どのように使いたいのかによって多様に変化していくし、それによって成長していくEmacsは自分自身の体の一部になっていくように感じられます。

EmacsはEmacs Lispというプログラミング言語の完全な処理系と考える事ができます。Emacs Lispによってほとんど全てのEmacsの機能に手を加える事ができますし、実行中のEmacsの上で新しいEmacs Lispを評価する事で、既存のコードの挙動を即時に置き換える事もできます。

Emacs LispはLisp言語の方言の1つです。Lisp言語には他の言語にはない優れている点が様々ありますが、それについては内容が多くなりすぎるため、ここでは詳しく触れる事ができません。ただEmacs Lispの優れている点はその柔軟性にあるでしょう。

Emacs Lispのスコープの扱いや、(ほとんど制約のない)名前空間の扱いは、気軽にLispを書き評価し挙動を変更していくというスタイルに向いています。堅牢で完全なシステムを作るには不利で混乱の元になるようなこれらの特徴も、自分のためだけのツールを即座に書いたり、その場だけの用途で特定の処理を無理矢理変更するなど、日常生活で発生する小さなニーズを満たすためには利点となるのです。

またEmacs Lispはプログラミング言語としては貧弱であるという考えもあります。たしかに処理速度が速いわけでもなく、GILの存在や、スレッドによってメインスレッドがブロックされてしまうなど、言語的にさまざまな制約があります。しかしそのような特徴だからこそ、Emacs Lispで全てを実装するのではなく、外部プロセスを利用し外の世界と協調する事で機能を実現する事を良しとする考えもあります。そのような考えの元では、Emacs以外の知識を利用する事になり、その知識の深さの分だけできる事が増えます。

自分にできる事はEmacsの強力な編集能力やバッファ操作によって更に強化でき、自分にできない事はEmacsを使ってもできません。つまり自分自身の成長の歩幅に合わせてEmacsも成長していきます。自分と共に成長してくれる相棒、それがEmacsであり、それこそがEmacsを使う理由です。

* セットアップ

Emacsをインストールし、この設定を使う方法について説明します。

1. GNU Emacsをインストールします。

   公式のインストール方法は https://www.gnu.org/software/emacs/download.html を参照してください。または自分でビルドする事もできます。自分でビルドする場合は「セルフビルド」の節を参照してください。

2. 設定ファイルをダウンロードします。

   #+begin_src
   git clone https://github.com/TakesxiSximada/.emacs.d.git ~/.emacs.d
   #+end_src

3. GNU Emacsを起動します。

   GNU Emacsのアプリケーションを起動します。環境によって起動方法は異なりますが =emacs= や =emacs -nw= 、macOSであれば =open /Applications/Emacs.app= などで起動できるでしょう。もちろん、Emacsのアプリケーションのアイコンをダブルクリックでも起動するでしょう。

* セルフビルド

公式のGNU Emacsディストリビューションには、いくつかの機能が無効になっています。これらの機能を有効にするには、自分でアプリケーションをビルドする必要があります。以下は、macOS向けにビルドするための手順です。

1. 依存するツールをインストールする。

   #+caption: Homebrewを使って依存するツールをインストールする。
   #+begin_src bash
   brew install \
        autoconf \
        texinfo \
        imagemagick \
        gnutls
   #+end_src

2. GNU Emacsのソースコードをダウンロードする。

   #+caption: SavannahからGNU Emacsのソースコードをダウンロードする。
   #+begin_src bash
   git clone --depth 1 https://git.savannah.gnu.org/git/emacs.git
   #+end_src

3. ソースツリーのルートディレクトリに作業ディレクトリを移動する。

   #+begin_src bash
   cd emacs
   #+end_src

4. autogenスクリプトを実行しconfigureスクリプトを生成する。

   #+begin_src bash
   ./autogen.sh
   #+end_src

5. configureスクリプトを実行しビルドに必要なMakefileなどの各種ファイルを生成する。この時、有効にする機能をオプションとして指定する。

   #+begin_src bash
   ./configure \
      --with-imagemagick \
      --with-mailutils \
      --with-modules \
      --with-ns \
      --with-pop \
      --with-xwidgets \
      --x-includes=/opt/X11/include \
      --x-libraries=/opt/X11/lib \
      --with-x
   #+end_src

4. Cで実装されたコードをビルドする。

   #+begin_src
   make
   #+end_src

5. macOS用のアプリケーションバンドルを生成する。これによりEmacs Lispで実装されたコードも同梱される。

   #+begin_src
   make install
   #+end_src

6. アプリケーションを/Applications配下のディレクトリに移動する。

   #+begin_src
   sudo mv nextstep/Emacs.app /Applications
   #+end_src

* Emacs文学

Emacsには根強いファンがいます。そのファンの中には自らのEmacsへの想いをテクニカルエッセイといったような形式で文章にしている人達がいます。その内容は様々であり、主観的であったり、個人的な事柄を含む事もあります。それはその人達が何かしらの仕事に取り組んだ足跡であり、それぞれの考え方を伝えようとしています。

私はそのような文章の事をEmacs文学と呼んでおり、短編小説を読むように楽しんでいます。それは著者達の人間味を感じる事ができるからです。ここではそのようなEmacs文学の名著達を紹介します。これはフィクションである事もありますが、そんな事はどうでもいい事です。どの作品であれ、そこにはEmacsに対する愛が溢れています。

- https://qiita.com/sylx/items/46bc993471cd71980aa5
- https://www.itmedia.co.jp/enterprise/articles/0706/26/news003_2.html
- https://gntm-mdk.hatenadiary.com/entry/2016/10/28/073351
- http://kymst.net/index.php?plugin=attach&refer=diary&openfile=diaryFrN57to.pdf
- https://www.hum.grad.fukuoka-u.ac.jp/news/1396/
- https://tomoya.hatenadiary.org/entry/20120327/1332792017
- https://anond.hatelabo.jp/20250203103447

テクニカルエッセイの中で特別な意味を持つジャンルの1つに「〜は死んだ」というものがあります。一時期人気を博したソフトウェアが、その歴史の中で他の競合が登場したり、開発が停滞したり、さまざまな理由によって時代遅れとなった、オワコンになった、使われなくなったといった意味合いでこのような表現が使われます。それが「〜は死んだ」というジャンルです。

その対象が思い入れのあるソフトウェアであれば、怒りを感じるかもしれません。しかし、落ち着いてください。そのような文章が書かれるほど、そのソフトウェアは素晴らしく、また人気があったという証拠でもあるのです。そしてそのソフトウェアが本当に死んだのかは関係がありません。少なくともあなたはそのソフトウェアを今も使っているでしょう？これらの文章は、ただ時代の流れや変化を楽しむ事が目的なのです。

Emacsにもそのような素晴しい文章があります。僕自身は新しいEmacsの死が、このジャンルの歴史として永遠に積み重なっていく事を願っています。Emacsに栄光あれ。

- https://qiita.com/akmiyoshi/items/1c19d1484049683b4cec
